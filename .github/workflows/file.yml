# Name of the workflow
          name: CI/CD Pipeline

          # Define when the workflow runs
          on:
            # Trigger on pushes to the main branch
            push:
              branches:
                - main
            # Trigger on pull requests targeting the main branch
            pull_request:
              branches:
                - main

          # Define the jobs to run
          jobs:
            build-and-push: # Renamed from build-and-deploy, as this job focuses on building and pushing the image
              # Run the job on the latest Ubuntu environment
              runs-on: ubuntu-latest

              # Steps for this job
              steps:
              - name: Checkout code # Step to get the code from the repository
                uses: actions/checkout@v3

              - name: Set up Python # Step to set up the Python environment
                uses: actions/setup-python@v4
                with:
                  # Pin to a specific Python version for consistency
                  python-version: '3.10' # Or '3.11', '3.12' etc.

              - name: Cache pip dependencies # Step to cache the pip cache directory
                uses: actions/cache@v3
                with:
                  path: ~/.cache/pip # The path to cache
                  key: ${{ runner.os }}-python-${{ hashFiles('CRPR/requirements.txt') }} # Cache key based on OS, Python version, and requirements file hash
                  restore-keys: | # Keys to use if the primary key is not found
                    ${{ runner.os }}-python-

              - name: Install dependencies # Step to install Python dependencies
                run: |
                  python -m pip install --upgrade pip # Ensure pip is up-to-date
                  pip install -r CRPR/requirements.txt # Install dependencies from requirements.txt

              - name: Run tests
                working-directory: ./CRPR
                run: |
                  pytest

              - name: Run Linters and Formatters
                working-directory: ./CRPR
                run: |
                  # Run Flake8 for linting
                  flake8 .
              
                  # Run Black for formatting check
                  black --check .

              - name: Log in to Docker Hub # Step to authenticate with Docker Hub
                uses: docker/login-action@v2
                with:
                  username: ${{ secrets.DOCKER_USERNAME }} # Use GitHub Secrets for username
                  password: ${{ secrets.DOCKER_PASSWORD }} # Use GitHub Secrets for password

              - name: Build and push Docker image # Step to build and push the Docker image
                run: |
                  # Define the image name and tag
                  # Using a fixed tag like v1.0
                  IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/crpr-web # Use your image name
                  IMAGE_TAG=v1.0 # Set the tag to v1.0
          
                  # Build the Docker image
                  # Use the build context (usually the root of the repo)
                  docker build -t $IMAGE_NAME:$IMAGE_TAG .
          
                  # Push the Docker image to Docker Hub
                  docker push $IMAGE_NAME:$IMAGE_TAG
          
                  # Optional: Also tag and push with 'latest' for convenience (use with caution)
                  # docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
                  # docker push $IMAGE_NAME:latest